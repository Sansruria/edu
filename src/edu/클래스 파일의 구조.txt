package ... // 1 패키지

import ... // 2 임포트

class 클래스명 {...} // 3 외부 클래스

public class A() { // 파일 이름과 똑같아야 한다

    int a = 1; // 인스턴스 변수
    static int b = 1; // 클래스 변수

    int c () { // 메소드
        int d // 지역 변수
    }

    A() {...} // 생성자

}

package
패키지를 사용하는 이유는 클래스명의 고유성을 보장하기 위해서이다
프로젝트를 진행하다 보면 동일한 클래스명을 가진 파일이 생길 수도 있고 외부의 파일을 추가할 때 기존에 작성한 파일의 이름과
중복되는 경우가 생겨 충돌이 생길 수 있기 때문이다

프로젝트를 생성할 때 패키지를 지정했다면 이 구성 요소에 패키지명이 포함되며, 반드시 주석을 제외하고 첫 번째 줄에 위치해야 한다.
클래스의 생성 과정에서 패키지를 생성하지 않았다면, 즉 디폴트 패키지를 사용하면 생략된다.

임포트 import
: 다른 패키지의 클래스를 사용하고자 할 때 포함된다. 인텔리제이의 임포트 단축키는 참고 . 패키지 다음에 위치한다.

외부 클래스 external class
: 클래스의 외부에 또 다른 클래스가 포함될 수 있다. 즉 1개의 .java 파일에 여러개의 클래스가 포함될 수 있다는 것이다. 단, 외부 클래스에는 public 키워드를 붙일 수 없다.

클래스 내부 구성 요소 살펴보기
클래스 내부의 구성 요소를 살펴보자. 내부에는 4가지의 구성 요소가 포함될 수 있다.

필드 field
: 클래스의 특징(속성)을 나타내는 변수다. 만일 이 클래스가 한 사람에 관련된 정보를 담고 있다면 필드값으로 나이(int age = 20) 등이 포함될 수 있을 것이다.

메서드 method
: 클래스가 지니고 있는 기능(함수)을 나타낸다. 한 사람에 관련된 클래스라면 일하기(void working() {...})등이 포함될 수 있다.

생성자 constructor
: 생성자(A() {...})는 클래스의 객체를 생성하는 역할을 담당한다. 아직 클래스나 객체에 관한 명확한 개념은 없더라도 생성자의 역할이 '객체를 생성한다'라는 점까지는 기억해 두자.

+) 접근 지정자 public 이란?
class 키워드 앞에 있는 public을 접근 지정자 라고 한다. 이는 다음에 자세히 다룰 것이므로 여기서는 class를 꾸며 주는 말 정도로만 생각하면 된다. 즉, 빨간색 사과 라는 표현에서 사과가 클래스라면 public은 빨간 정도의 의미를 지니고 있는 것이다. 다만 .java 파일 내에서 pulic은 최대 1개의 클래스에만 붙을 수 있으며 public이 붙은 클래스명이 파일명과 동일해야 한다는 정도는 꼭 기억하자.